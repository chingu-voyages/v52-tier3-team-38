import localFont from "next/font/local";
import "./globals.css";
import 'bootstrap/dist/css/bootstrap.min.css';

import UserHeader from "./components/UserHeader";
import UserNavbar from "./components/UserNavbar";
import UnauthHeader from "./components/UnauthHeader";
import UnauthNavbar from "./components/UnauthNavbar";

import { getUserDetails } from "../../utils/supabase/getUserDetails";

import { createClient } from "../../utils/supabase/server";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {

  const supabase = await createClient()

  const { data, error } = await supabase.auth.getUser()

  if (error) {
    console.error("Error fetching user:", error);
    return <div>Error fetching user</div>;
  }

  const userDetails = await getUserDetails(data.user.id);

  console.log(userDetails);
  console.log(data);

  if (data.user) {
    return (
    <html lang='en' suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
      <UserHeader />
        {children}
      <UserNavbar />
      </body>
    </html>
  );
  }

  if (!data.user) {
    return (
    <html lang='en' suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
      <UnauthHeader />
        {children}
      <UnauthNavbar />
      </body>
    </html>
  );
  }

}
